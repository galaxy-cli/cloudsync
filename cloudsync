#!/bin/bash

# Color codes for nicer prompts
C_RESET="\033[0m"
C_GREEN="\033[0;32m"
C_BLUE="\033[0;34m"
C_YELLOW="\033[1;33m"
C_RED="\033[0;31m"

# Function to install rclone (interactive)
install_rclone() {
    echo -e "\n${C_BLUE}Installing rclone...${C_RESET}"
    curl https://rclone.org/install.sh | sudo bash
    if command -v rclone &> /dev/null; then
        echo -e "${C_GREEN}[✓] rclone installed successfully${C_RESET}"
    else
        echo -e "${C_RED}[✗] rclone installation failed. Exiting${C_RESET}"
        exit 1
    fi
}

echo -e "${C_GREEN}Welcome to the KeePassXC Cloud Sync Script!${C_RESET}"

# 🔍 Check if rclone is installed
if ! command -v rclone &> /dev/null; then
    echo -e "${C_YELLOW}[!] rclone is not installed on your system.${C_RESET}"
    read -p "Would you like to install rclone now? [Y/n] " INSTALL_RCLONE

    case "$INSTALL_RCLONE" in
        [Yy]* | "" )
            install_rclone
            ;;
        * )
            echo -e "${C_RED}rclone is required. Exiting script${C_RESET}"
            exit 1
            ;;
    esac
fi

# Prompt for file path to upload
read -e -p "Enter the full path to the file you want to upload (e.g., /path/to/file.kdbx) " SRC_FILE

# ✅ Validate source file
if [[ ! -f "$SRC_FILE" ]]; then
    echo -e "${C_YELLOW}[!] File not found: $SRC_FILE${C_RESET}"
    exit 1
fi

# Prompt for cloud remotes
echo -e "\n${C_BLUE}Choose where to sync your file:${C_RESET}"
echo "1) Box"
echo "2) Google Drive"
echo "3) Koofr"
echo "4) MEGA"
echo "5) pCloud"
echo "6) All of the above"
read -p "Enter your choice (e.g., 2 or 1 4 5 or 6): " CHOICES

# Define rclone remotes
declare -A REMOTES=(
    [1]="Box:"
    [2]="Google:"
    [3]="Koofr:"
    [4]="MEGA:"
    [5]="pCloud:"
)

# Turn input into array
IFS=' ' read -r -a SELECTED <<< "$CHOICES"

# Check for "all" option
if [[ " ${SELECTED[*]} " =~ " 6 " ]]; then
    SELECTED=(1 2 3 4 5)
fi

echo ""

# Loop over selected remotes
for INDEX in "${SELECTED[@]}"; do
    DEST="${REMOTES[$INDEX]}"
    if [[ -z "$DEST" ]]; then
        echo -e "${C_YELLOW}[!] Skipping invalid remote option: $INDEX${C_RESET}"
        continue
    fi

    echo -e "${C_BLUE}Syncing to ${DEST}...${C_RESET}"
    rclone copy "$SRC_FILE" "$DEST" --progress

    if [[ $? -eq 0 ]]; then
        echo -e "${C_GREEN}[✓] Successfully synced to $DEST${C_RESET}"
    else
        echo -e "${C_YELLOW}[✗] Failed to sync to $DEST${C_RESET}"
    fi
    echo
done

echo -e "${C_GREEN}Cloud sync completed.${C_RESET}"
